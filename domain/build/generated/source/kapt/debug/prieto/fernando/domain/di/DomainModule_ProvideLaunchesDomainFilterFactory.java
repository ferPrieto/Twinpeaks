// Generated by Dagger (https://dagger.dev).
package prieto.fernando.domain.di;

import dagger.internal.Factory;
import dagger.internal.Preconditions;
import prieto.fernando.domain.mapper.LaunchesDomainFilter;

@SuppressWarnings({
    "unchecked",
    "rawtypes"
})
public final class DomainModule_ProvideLaunchesDomainFilterFactory implements Factory<LaunchesDomainFilter> {
  private final DomainModule module;

  public DomainModule_ProvideLaunchesDomainFilterFactory(DomainModule module) {
    this.module = module;
  }

  @Override
  public LaunchesDomainFilter get() {
    return provideLaunchesDomainFilter(module);
  }

  public static DomainModule_ProvideLaunchesDomainFilterFactory create(DomainModule module) {
    return new DomainModule_ProvideLaunchesDomainFilterFactory(module);
  }

  public static LaunchesDomainFilter provideLaunchesDomainFilter(DomainModule instance) {
    return Preconditions.checkNotNull(instance.provideLaunchesDomainFilter(), "Cannot return null from a non-@Nullable @Provides method");
  }
}
