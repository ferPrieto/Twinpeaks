// Generated by Dagger (https://dagger.dev).
package prieto.fernando.presentation.di;

import dagger.internal.Factory;
import dagger.internal.Preconditions;
import javax.inject.Provider;
import prieto.fernando.presentation.mapper.DateTimeProvider;
import prieto.fernando.presentation.mapper.DateTransformer;

@SuppressWarnings({
    "unchecked",
    "rawtypes"
})
public final class PresentationModule_ProvideDateTransformerFactory implements Factory<DateTransformer> {
  private final PresentationModule module;

  private final Provider<DateTimeProvider> dateTimeProvider;

  public PresentationModule_ProvideDateTransformerFactory(PresentationModule module,
      Provider<DateTimeProvider> dateTimeProvider) {
    this.module = module;
    this.dateTimeProvider = dateTimeProvider;
  }

  @Override
  public DateTransformer get() {
    return provideDateTransformer(module, dateTimeProvider.get());
  }

  public static PresentationModule_ProvideDateTransformerFactory create(PresentationModule module,
      Provider<DateTimeProvider> dateTimeProvider) {
    return new PresentationModule_ProvideDateTransformerFactory(module, dateTimeProvider);
  }

  public static DateTransformer provideDateTransformer(PresentationModule instance,
      DateTimeProvider dateTimeProvider) {
    return Preconditions.checkNotNull(instance.provideDateTransformer(dateTimeProvider), "Cannot return null from a non-@Nullable @Provides method");
  }
}
